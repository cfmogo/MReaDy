%!PS-Adobe-2.0 EPSF-2.0
%%Title: time_changes0.eps
%%Creator: gnuplot 5.4 patchlevel 2
%%CreationDate: Tue Jul  4 17:30:55 2023
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 338
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -50 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 338 50 lineto 338 338 lineto 50 338 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (time_changes0.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue Jul  4 17:30:55 2023)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 150 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 5760.00 5760.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
765 480 M
31 0 V
4693 0 R
-31 0 V
765 579 M
63 0 V
4661 0 R
-63 0 V
stroke
675 579 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
/vshift -50 def
1.000 UL
LTb
LCb setrgbcolor
765 1234 M
31 0 V
4693 0 R
-31 0 V
765 1616 M
31 0 V
4693 0 R
-31 0 V
765 1888 M
31 0 V
4693 0 R
-31 0 V
765 2099 M
31 0 V
4693 0 R
-31 0 V
765 2271 M
31 0 V
4693 0 R
-31 0 V
765 2416 M
31 0 V
4693 0 R
-31 0 V
765 2542 M
31 0 V
4693 0 R
-31 0 V
765 2653 M
31 0 V
4693 0 R
-31 0 V
765 2753 M
63 0 V
4661 0 R
-63 0 V
stroke
675 2753 M
[ [(Helvetica) 150.0 0.0 true true 0 (10)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
765 3407 M
31 0 V
4693 0 R
-31 0 V
765 3790 M
31 0 V
4693 0 R
-31 0 V
765 4061 M
31 0 V
4693 0 R
-31 0 V
765 4272 M
31 0 V
4693 0 R
-31 0 V
765 4444 M
31 0 V
4693 0 R
-31 0 V
765 4590 M
31 0 V
4693 0 R
-31 0 V
765 4716 M
31 0 V
4693 0 R
-31 0 V
765 4827 M
31 0 V
4693 0 R
-31 0 V
765 4926 M
63 0 V
4661 0 R
-63 0 V
stroke
675 4926 M
[ [(Helvetica) 150.0 0.0 true true 0 (100)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
765 480 M
0 63 V
0 4766 R
0 -63 V
stroke
765 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 0)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1237 480 M
0 63 V
0 4766 R
0 -63 V
stroke
1237 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 0.5)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1710 480 M
0 63 V
0 4766 R
0 -63 V
stroke
1710 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2182 480 M
0 63 V
0 4766 R
0 -63 V
stroke
2182 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 1.5)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2655 480 M
0 63 V
0 4766 R
0 -63 V
stroke
2655 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 2)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3127 480 M
0 63 V
0 4766 R
0 -63 V
stroke
3127 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 2.5)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3599 480 M
0 63 V
0 4766 R
0 -63 V
stroke
3599 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 3)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4072 480 M
0 63 V
0 4766 R
0 -63 V
stroke
4072 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 3.5)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
4544 480 M
0 63 V
0 4766 R
0 -63 V
stroke
4544 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 4)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5017 480 M
0 63 V
0 4766 R
0 -63 V
stroke
5017 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 4.5)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
5489 480 M
0 63 V
0 4766 R
0 -63 V
stroke
5489 330 M
[ [(Helvetica) 150.0 0.0 true true 0 ( 5)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
765 5309 N
765 480 L
4724 0 V
0 4829 V
-4724 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
202 2894 M
[ [(Helvetica) 150.0 0.0 true true 0 (N)]
[(Helvetica) 120.0 -45.0 true true 0 (i)]
] -35.0 MCshow
/Helvetica findfont 150 scalefont setfont
LTb
LCb setrgbcolor
3127 105 M
[ [(Helvetica) 150.0 0.0 true true 0 (time / ps)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
LTb
% Begin plot #1
1.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
1665 4319 M
[ [(Helvetica) 150.0 0.0 true true 0 (O)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.58 0.00 0.83 C
1755 4319 M
423 0 V
% End plot #1
% Begin plot #2
stroke
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
1665 4169 M
[ [(Helvetica) 150.0 0.0 true true 0 (H)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.00 0.62 0.45 C
1755 4169 M
423 0 V
765 4272 M
17 0 V
61 0 V
71 -19 V
55 -39 V
31 19 V
1 39 V
66 -19 V
43 19 V
158 0 V
83 0 V
140 0 V
2 0 V
4 0 V
5 0 V
1 0 V
31 -19 V
2 19 V
4 -19 V
4 19 V
53 0 V
1 0 V
6 0 V
2 0 V
4 0 V
5 0 V
2 0 V
100 0 V
43 -19 V
18 0 V
30 19 V
115 -19 V
18 -20 V
34 -19 V
7 19 V
6 20 V
9 -20 V
31 20 V
5 19 V
156 0 V
56 0 V
109 -39 V
37 39 V
131 0 V
36 -39 V
15 0 V
13 -19 V
36 19 V
3 39 V
263 0 V
115 0 V
10 -19 V
32 19 V
28 -19 V
41 0 V
22 19 V
10 -19 V
41 0 V
4 19 V
89 0 V
69 0 V
242 -19 V
70 19 V
176 -19 V
73 -20 V
52 0 V
1 20 V
299 0 V
4 0 V
2 19 V
4 -19 V
62 19 V
11 0 V
42 0 V
2 0 V
5 0 V
2 0 V
261 0 V
8 -19 V
28 0 V
22 -20 V
7 0 V
0 -19 V
49 19 V
1 0 V
5 20 V
56 -20 V
24 20 V
210 0 V
96 0 V
140 -39 V
34 39 V
51 0 V
65 -39 V
32 0 V
% End plot #2
% Begin plot #3
stroke
LTb
0.34 0.71 0.91 C
LCb setrgbcolor
1665 4019 M
[ [(Helvetica) 150.0 0.0 true true 0 (Empty)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.34 0.71 0.91 C
1755 4019 M
423 0 V
% End plot #3
% Begin plot #4
stroke
LTb
0.90 0.62 0.00 C
LCb setrgbcolor
1665 3869 M
[ [(Helvetica) 150.0 0.0 true true 0 (H2s)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.90 0.62 0.00 C
1755 3869 M
423 0 V
765 4926 M
17 -19 V
61 19 V
71 -9 V
55 0 V
31 9 V
1 0 V
66 -9 V
43 9 V
158 -19 V
83 19 V
140 -19 V
2 19 V
4 -19 V
5 19 V
1 -19 V
31 -9 V
2 9 V
4 -9 V
4 9 V
53 19 V
1 -19 V
6 19 V
2 -19 V
4 19 V
5 -19 V
2 19 V
100 -19 V
43 -9 V
18 19 V
30 9 V
115 0 V
18 0 V
34 -9 V
7 0 V
6 0 V
9 -10 V
31 10 V
5 9 V
156 -19 V
56 19 V
109 0 V
37 0 V
131 0 V
36 10 V
15 0 V
13 -10 V
36 10 V
3 -10 V
263 -19 V
115 19 V
10 -9 V
32 9 V
28 -9 V
41 -19 V
22 9 V
10 -9 V
41 19 V
4 9 V
89 -19 V
69 19 V
242 -9 V
70 9 V
176 0 V
73 -9 V
52 0 V
1 9 V
299 0 V
4 0 V
2 0 V
4 -9 V
62 9 V
11 0 V
42 -19 V
2 19 V
5 -19 V
2 19 V
261 -19 V
8 0 V
28 -19 V
22 0 V
7 19 V
0 -9 V
49 9 V
1 19 V
5 0 V
56 0 V
24 0 V
210 -19 V
96 19 V
140 10 V
34 -10 V
51 -19 V
65 0 V
32 19 V
% End plot #4
% Begin plot #5
stroke
LTb
0.94 0.89 0.26 C
LCb setrgbcolor
1665 3719 M
[ [(Helvetica) 150.0 0.0 true true 0 (O2\(3S\))]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.94 0.89 0.26 C
1755 3719 M
423 0 V
765 4926 M
17 0 V
61 0 V
71 0 V
55 0 V
31 0 V
1 0 V
66 0 V
43 0 V
158 0 V
83 0 V
140 0 V
2 0 V
4 0 V
5 0 V
1 0 V
31 0 V
2 0 V
4 0 V
4 0 V
53 0 V
1 0 V
6 0 V
2 0 V
4 0 V
5 0 V
2 0 V
100 0 V
43 0 V
18 0 V
30 0 V
115 -9 V
18 -10 V
34 0 V
7 10 V
6 9 V
9 0 V
31 0 V
5 0 V
156 0 V
56 0 V
109 0 V
37 0 V
131 -19 V
36 0 V
15 19 V
13 0 V
36 0 V
3 0 V
263 0 V
115 0 V
10 0 V
32 0 V
28 0 V
41 0 V
22 0 V
10 0 V
41 0 V
4 0 V
89 0 V
69 0 V
242 0 V
70 0 V
176 -9 V
73 0 V
52 -19 V
1 0 V
299 19 V
4 -19 V
2 9 V
4 0 V
62 0 V
11 19 V
42 0 V
2 0 V
5 0 V
2 0 V
261 0 V
8 -9 V
28 0 V
22 -10 V
7 0 V
49 0 V
1 0 V
5 10 V
56 -10 V
24 10 V
210 0 V
96 0 V
140 0 V
34 0 V
51 0 V
65 0 V
32 0 V
% End plot #5
% Begin plot #6
stroke
LTb
0.00 0.45 0.70 C
LCb setrgbcolor
1665 3569 M
[ [(Helvetica) 150.0 0.0 true true 0 (OH\(2Pi\))]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.00 0.45 0.70 C
1755 3569 M
423 0 V
% End plot #6
% Begin plot #7
stroke
LTb
0.90 0.12 0.06 C
LCb setrgbcolor
1665 3419 M
[ [(Helvetica) 150.0 0.0 true true 0 (HO2)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.90 0.12 0.06 C
1755 3419 M
423 0 V
1923 579 M
18 655 V
34 0 V
7 -655 V
1855 0 R
73 0 V
52 0 V
1 0 V
299 0 V
4 0 V
399 0 R
28 0 V
22 655 V
7 0 V
49 0 V
1 0 V
5 -655 V
56 655 V
24 -655 V
210 0 V
96 0 V
140 0 V
34 0 V
51 0 V
65 0 V
32 0 V
% End plot #7
% Begin plot #8
stroke
LTb
0.00 0.00 0.00 C
LCb setrgbcolor
1665 3269 M
[ [(Helvetica) 150.0 0.0 true true 0 (H2O\(1A`\))]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.00 0.00 0.00 C
1755 3269 M
423 0 V
% End plot #8
% Begin plot #9
stroke
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
1665 3119 M
[ [(Helvetica) 150.0 0.0 true true 0 (H2O\(3A``\))]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.58 0.00 0.83 C
1755 3119 M
423 0 V
% End plot #9
% Begin plot #10
stroke
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
1665 2969 M
[ [(Helvetica) 150.0 0.0 true true 0 (O3)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.00 0.62 0.45 C
1755 2969 M
423 0 V
% End plot #10
% Begin plot #11
stroke
LTb
0.34 0.71 0.91 C
LCb setrgbcolor
1665 2819 M
[ [(Helvetica) 150.0 0.0 true true 0 (H3)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.34 0.71 0.91 C
1755 2819 M
423 0 V
914 579 M
55 0 V
98 0 R
467 0 R
6 0 R
220 0 R
18 0 V
197 0 R
7 0 V
6 0 V
9 655 V
31 -655 V
558 0 R
427 0 R
60 0 R
41 0 V
32 0 R
41 0 V
404 0 R
319 0 R
52 0 V
310 0 R
450 0 R
% End plot #11
% Begin plot #12
stroke
LTb
0.90 0.62 0.00 C
LCb setrgbcolor
1665 2669 M
[ [(Helvetica) 150.0 0.0 true true 0 (H4)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.90 0.62 0.00 C
1755 2669 M
423 0 V
782 579 M
486 0 R
223 0 R
6 0 R
6 0 R
31 0 V
2 0 V
4 0 V
4 0 V
54 0 R
8 0 R
9 0 R
102 0 R
43 0 V
429 0 R
699 0 R
226 0 R
22 0 V
10 0 V
134 0 R
1107 0 R
7 0 R
263 0 R
8 0 V
28 655 V
22 0 V
7 -655 V
49 0 V
296 0 R
321 0 R
65 0 V
% End plot #12
% Begin plot #13
stroke
LTb
0.94 0.89 0.26 C
LCb setrgbcolor
1665 2519 M
[ [(Helvetica) 150.0 0.0 true true 0 (H2O2\(1A\))]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.94 0.89 0.26 C
1755 2519 M
423 0 V
% End plot #13
% Begin plot #14
stroke
LTb
0.00 0.45 0.70 C
LCb setrgbcolor
1665 2369 M
[ [(Helvetica) 150.0 0.0 true true 0 (O4)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.00 0.45 0.70 C
1755 2369 M
423 0 V
2522 579 M
36 0 V
1404 0 R
1 0 V
303 0 R
2 0 V
4 0 V
62 0 V
% End plot #14
% Begin plot #15
stroke
LTb
0.90 0.12 0.06 C
LCb setrgbcolor
1665 2219 M
[ [(Helvetica) 150.0 0.0 true true 0 (H3O)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.90 0.12 0.06 C
1755 2219 M
423 0 V
% End plot #15
% Begin plot #16
stroke
LTb
0.00 0.00 0.00 C
LCb setrgbcolor
1665 2069 M
[ [(Helvetica) 150.0 0.0 true true 0 (HO3)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.00 0.00 0.00 C
1755 2069 M
423 0 V
% End plot #16
% Begin plot #17
stroke
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
1665 1919 M
[ [(Helvetica) 150.0 0.0 true true 0 (H2t)]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.58 0.00 0.83 C
1755 1919 M
423 0 V
969 579 M
31 0 V
1354 0 R
3099 0 R
32 0 V
% End plot #17
% Begin plot #18
stroke
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
1665 1769 M
[ [(Helvetica) 150.0 0.0 true true 0 (O2\(1D\))]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.00 0.62 0.45 C
1755 1769 M
423 0 V
% End plot #18
% Begin plot #19
stroke
LTb
0.34 0.71 0.91 C
LCb setrgbcolor
1665 1619 M
[ [(Helvetica) 150.0 0.0 true true 0 (H2O2\(3A\))]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.34 0.71 0.91 C
1755 1619 M
423 0 V
% End plot #19
% Begin plot #20
stroke
LTb
0.90 0.62 0.00 C
LCb setrgbcolor
1665 1469 M
[ [(Helvetica) 150.0 0.0 true true 0 (HO\(4\))]
] -50.0 MRshow
/Helvetica findfont 150 scalefont setfont
1.000 UL
LTb
0.90 0.62 0.00 C
1755 1469 M
423 0 V
% End plot #20
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
765 5309 N
765 480 L
4724 0 V
0 4829 V
-4724 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
3127 5534 M
[ [(Helvetica) 150.0 0.0 true true 0 (Reading time_changes.cvs)]
] -50.0 MCshow
/Helvetica findfont 150 scalefont setfont
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
